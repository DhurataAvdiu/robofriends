{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filterRobots","this","filter","robot","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEzB,OAEC,cADA,CACA,OAAKC,UAAU,sDAAf,UACE,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACE,6BAAKF,IACL,4BAAIC,WCYKK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAOC,GACjC,OACN,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MASP,OACC,8BACSH,KCLII,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC/B,OACC,qBAAKX,UAAU,MAAf,SACS,uBACCA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEPI,EARD,SAACC,GACb,OACC,qBAAKC,MAAO,CAACC,UAAY,SAAWC,OAAO,kBAAkBC,OAAO,SAApE,SACEJ,EAAMK,YCoCIC,G,wDAlCd,aAAc,IAAD,8BACZ,gBAcDC,eAAgB,SAACC,GAChB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAQ,CACZxB,OAAS,GACHM,YAAc,IAJT,E,gEAQO,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACrB,OAAS6B,S,+BAO7B,IAAD,OACEC,EAAeC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAC,GAC1C,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS,EAAKX,MAAMlB,YAAY4B,kBAEnE,OACE,sBAAKtC,UAAU,KAAf,UACH,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACK,cAAC,EAAD,CAAUnB,OAAQ8B,a,GA5BVM,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCbO,IAASC,OAAQ,cAAC,EAAD,IACfC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.8fc2ceef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name,email,id}) => {\r\n\t\r\n\treturn (\r\n\t\t//<h1> Robo Friwnds </h1>\r\n\t\t<div className=\" tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t  <img  alt=\"robots\" src={`https://robohash.org/${id}?200*200`}/>\r\n\t\t  <div>\r\n\t\t    <h2>{name}</h2>\r\n\t\t    <p>{email}</p>\r\n           </div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\tconst cardComponent = robots.map((user , i) =>{\r\n         return (\r\n\t\t\t<Card \r\n\t\t\tkey={i}\r\n\t\t\tid={robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail={robots[i].email} \r\n\t\t\t/> \r\n\t\t);\r\n\t\t\r\n\t})\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n          {cardComponent}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n           <input\r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}/>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll= (props) =>{\r\n  return (\r\n  \t<div style={{overflowY : 'scroll' , border:'1px solid black',height:'500px'}}>\r\n  \t {props.children}\r\n  \t</div>\r\n  \t);\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots : [],\r\n\t        searchfield : \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>response.json())\r\n\t\t.then(users=>this.setState({robots : users}));\r\n\t\t\r\n\t}\r\n\r\n\tonSearchChange =(event) =>{\r\n\t\tthis.setState({searchfield: event.target.value});\r\n\t}\r\n\trender(){\r\n\t    const filterRobots = this.state.robots.filter(robot => {\r\n\t       \treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t    })\r\n\t\t    return (\r\n\t\t     \t<div className=\"tc\">\r\n\t\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t      <CardList robots={filterRobots}/>\r\n\t\t\t\t    </Scroll>\r\n\t\t\t    </div>\r\n\t\t\t);\r\n\t\t}\r\n}  \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\n\n\tReactDOM.render( <App />,\n\t  document.getElementById('root')\n\t);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}